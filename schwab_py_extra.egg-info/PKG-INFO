Metadata-Version: 2.4
Name: schwab-py-extra
Version: 0.0.1
Summary: Unofficial extension for the Schwab-py
Home-page: https://github.com/neusse/schwab-py-extra
Author: George Neusse
Author-email: george2neusse.com
License: MIT
Keywords: finance trading equities bonds options research extras
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Development Status :: 1 - Planning
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Topic :: Office/Business :: Financial :: Investment
Requires-Python: >=3.10
Description-Content-Type: text/x-rst
License-File: LICENSE
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: requires-python
Dynamic: summary

# schwab-py-extra
extras for schwab-py

Command-Line Utilities
----------------------

Once Schwab-py is installed, the following commands become available on **Linux**, **macOS**, and **Windows**:

* **`schwab-analysis`**
  Run Token function analysis routines against your Schwab account.

* **`schwab-refresh-token`**  
  Automatically refresh your Schwab API token using stored credentials.

* **`schwab-fetch-new-token`**
  Obtain a brand-new API token via the manual OAuth flow. Deletes any existing token file before acquiring a new one.

* **`schwab-setup-env`**
  Interactively create and validate the persistant environment variables required for Schwab API access:

  * `schwab_api_key`
  * `schwab_app_secret`
  * `schwab_callback_url`
  * `schwab_token_path`
    Use `--show` to display current values without prompting.

* **`schwab-package-checker`**
  Verify that all required dependencies and package versions meet Schwab Pyâ€™s requirements.

### Usage Examples

* Show current env vars  ```schwab-setup-env --show```
* Set up env vars interactively: ```schwab-setup-env```
* Run analysis: ```schwab-analysis -u```
* Refresh an existing token: ```schwab-refresh-token```
* Fetch a brand-new token: ```schwab-fetch-new-token```
* Check package/dependency versions: ```schwab-package-checker -u```

> **Note**: After running `schwab-setup-env` on Linux/macOS, you may need to `source ~/.bashrc` or `source ~/.zshrc` for changes to take effect in your current shell.


``schwab-py-extra`` is released under the
`MIT license`__.
